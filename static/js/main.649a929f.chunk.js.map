{"version":3,"sources":["Form.js","Table.js","Answer.js","Test.js","App.js","index.js"],"names":["Form","initialState","add","state","handleChange","event","target","name","value","setState","submitForm","props","handleSubmit","this","htmlFor","type","id","onChange","onClick","Component","TableHeader","TableBody","rows","wordData","map","row","index","key","Table","Answer","answer","submitAnswer","handleAnswer","TestHeader","TestBody","lines","testData","line","Test","App","word","console","log","words","some","each","answers","number","handleClick","randomClicked","SelectedWord","Math","floor","random","length","removeClicked","RemoveAllWords","className","style","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.649a929f.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Form extends Component {\n  initialState = {\n    add: '',\n  }\n\n  state = this.initialState\n\n  handleChange = (event) => {\n    const { name, value } = event.target\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n\n  render() {\n    const { add } = this.state;\n\n    return (\n      <form>\n        <label htmlFor = \"add\">New Word  </label>\n        <input\n          type=\"text\"\n          name=\"add\"\n          id=\"add\"\n          value={add}\n          onChange={this.handleChange} />\n\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n\n}\n\n\nexport default Form;\n","import React, { Component } from 'react'\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Word Bank</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = (props) => {\n  const rows = props.wordData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.add}</td>\n      </tr>\n    )\n  })\n\n  return <tbody>{rows}</tbody>\n\n}\n\n\nclass Table extends Component {\n  render() {\n    const { wordData } = this.props\n\n    return (\n      <table>\n        <TableHeader />\n        <TableBody wordData = { wordData } />\n      </table>\n    )\n  }\n}\n\n\n\nexport default Table;\n\n// import React, { Component } from 'react'\n//\n// const TableHeader = () => {\n//   return (\n//     <thead>\n//       <tr>\n//         <th>Word</th>\n//       </tr>\n//     </thead>\n//   )\n// }\n//\n// const TableBody = (props) => {\n//   const rows = props.wordData.map((row, index) => {\n//     return (\n//       <tr key = {index}>\n//         <td>{row.pick}</td>\n//         //\n//         // <td>\n//         //   <button onClick={() => props.removeCharacter(index)}>Delete</button>\n//         // </td>\n//       </tr>\n//     )\n//   })\n//\n//   return <tbody>{rows}</tbody>\n// }\n//\n// //single component Table\n// const Table = (props) => {\n//   const { wordData } = props\n//\n//   return (\n//     <table>\n//       <TableHeader />\n//       <TableBody\n//         wordData = { wordData }\n//       />\n//     </table>\n//   )\n// }\n//\n// //class component Table\n// // class Table extends Component {\n// //   render() {\n// //     const { characterData } = this.props\n// //\n// //     return (\n// //       <table>\n// //         <TableHeader />\n// //         <TableBody characterData = {characterData} />\n// //       </table>\n// //     )\n// //   }\n// // }\n//\n// export default Table;\n","import React, { Component } from 'react'\n\nclass Answer extends Component {\n  initialState = {\n    answer: '',\n  }\n\n  state = this.initialState\n\n  handleChange = (event) => {\n    const { name, value } = event.target\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  submitAnswer = () => {\n    this.props.handleAnswer(this.state)\n    this.setState(this.initialState)\n  }\n\n  render() {\n    const { answer } = this.state;\n\n    return (\n      <form>\n        <label htmlFor = \"answer\">Answer </label>\n        <input\n          type=\"text\"\n          name=\"answer\"\n          id=\"answer\"\n          value={answer}\n          onChange={this.handleChange} />\n\n        <input type=\"button\" value=\"Submit\" onClick={this.submitAnswer} />\n      </form>\n    );\n  }\n\n}\n\n\nexport default Answer;\n","import React, { Component } from 'react'\n\nconst TestHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th> Answer</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TestBody = (props) => {\n  const lines = props.testData.map((line, index) => {\n    return (\n      <tr key={index}>\n        <td>{line.answer}</td>\n      </tr>\n    )\n  })\n\n  return <tbody>{lines}</tbody>\n\n}\n\n\nclass Test extends Component {\n  render() {\n    const { testData } = this.props\n\n    return (\n      <table>\n        <TestHeader />\n        <TestBody testData = { testData } />\n      </table>\n    )\n  }\n}\n\n\n\nexport default Test;\n\n// import React, { Component } from 'react'\n//\n// const TableHeader = () => {\n//   return (\n//     <thead>\n//       <tr>\n//         <th>Word</th>\n//       </tr>\n//     </thead>\n//   )\n// }\n//\n// const TableBody = (props) => {\n//   const rows = props.wordData.map((row, index) => {\n//     return (\n//       <tr key = {index}>\n//         <td>{row.pick}</td>\n//         //\n//         // <td>\n//         //   <button onClick={() => props.removeCharacter(index)}>Delete</button>\n//         // </td>\n//       </tr>\n//     )\n//   })\n//\n//   return <tbody>{rows}</tbody>\n// }\n//\n// //single component Table\n// const Table = (props) => {\n//   const { wordData } = props\n//\n//   return (\n//     <table>\n//       <TableHeader />\n//       <TableBody\n//         wordData = { wordData }\n//       />\n//     </table>\n//   )\n// }\n//\n// //class component Table\n// // class Table extends Component {\n// //   render() {\n// //     const { characterData } = this.props\n// //\n// //     return (\n// //       <table>\n// //         <TableHeader />\n// //         <TableBody characterData = {characterData} />\n// //       </table>\n// //     )\n// //   }\n// // }\n//\n// export default Table;\n","import React, { Component } from 'react'\nimport Form from './Form'\nimport Table from './Table'\nimport Answer from './Answer'\nimport Test from './Test'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      words: [\n        {\n          add: 'Monday',\n        },\n        {\n          add: 'Tuesday',\n        },\n        {\n          add: 'Wednesday',\n        },\n        {\n          add: 'Clean',\n        },\n        {\n          add: 'Stock',\n        },\n      ],\n      SelectedWord: null,\n      randomClicked: false,\n      removeClicked: false,\n      answers: [\n        {\n          answer: '',\n        }\n      ],\n      number: 0,\n    }\n  }\n\n  // function checkWord(word) {\n  //   return\n  // }\n\n  handleSubmit = (word) => {\n    console.log(this.state.words)\n    this.state.words.some(each => each !== word) ?\n    this.setState({ words: [...this.state.words, word]}) : console.log(\"Duplicate!\")\n      \n    }\n\n      //{each === word ? alert(\"Duplicate!\") : this.state.words.push(word)}\n      // if (each === word) {\n      //   alert(\"Duplicate!\");\n      // }\n      // else {\n      //   this.state.words.push(word);\n\n      // }\n\n      //this.setState({ words: [...this.state.words, word]}); <- else 안에 & Original\n    //\n    //   {each === word ? this.setState({ words: [...this.state.words, word]}) : alert(\"Duplicate!\")\n    // })\n\n\n\n  handleAnswer = (answer) => {\n    this.setState({\n      answers: [...this.state.answers, answer],\n      number: this.state.number + 1,\n    })\n    console.log(this.state.number)\n  }\n\n  handleClick = () => {\n    this.setState({\n      randomClicked: true,\n      SelectedWord: this.state.words[Math.floor(Math.random() * this.state.words.length)].add,\n      number: 0,\n      removeClicked: true,\n      answers: [\n        {\n          answer: '',\n        }\n      ]\n    })\n    console.log(this.state.number)\n\n  }\n\n  RemoveAllWords = () => {\n    this.setState({\n      removeClicked: true,\n      words: [],\n    })\n  }\n  //\n  // RemoveAllAnswers = () => {\n  //   this.setState({\n  //     removeClicked: true,\n  //     answers: [\n  //       {\n  //         answer: '',\n  //       }\n  //     ],\n  //   })\n  // }\n  // componentDidMount() {\n  //   this.setState({count: 1})\n  // }\n  // checkAnswer = (SelectedWord, SelectedAnswer) => {\n  //   if (SelectedWord = SelectedAnswer) {\n  //     return <h1>Correct!</h1>\n  //     }\n  //   else {\n  //     return <h1>Try Again!</h1>\n  //   }\n  // }\n  //\n  // wordByword = (SelectedWord) => {\n  //   this.setState({\n  //     wordCount: SelectedWord.length\n  //   })\n  // }\n// <button onClick = {this.RemoveAllAnswers}>Remove All Answers</button>\n  render() {\n    const { words, answers } = this.state\n\n    return (\n      <div className = \"wholeBox\">\n        <div className = \"hanging\">\n        <Table wordData = {words} />\n          <button onClick = {this.RemoveAllWords}>Remove All Words</button>\n          <br/> <br/>\n          <Form handleSubmit = {this.handleSubmit} />\n          <br/>\n        </div>\n        <div className = \"word\">\n          <div className = \"correct\">\n            <div className = \"info\">\n            <h1>Welcome to The \"WORD GUESSING\" Game</h1> <br/>\n            @ Guess the word from the \"Word Bank\" above based on the \"length of the word\" given below <br/>\n            @ Press the \"Random Word\" button to start the game <br/>\n            @ Type in the word you guessed in the \"Answer\" box <br/>\n            @ You can Add or remove words from the \"Word Bank\" as you like<br/>\n            </div>\n            <div className = \"square\">\n              {\"\\n\"}\n              {this.state.randomClicked && this.state.SelectedWord.length}\n              <br/>\n              <button style={{marginTop:20}}onClick = {() => {\n              this.handleClick();\n              }}>\n              Random Word\n              </button>\n            </div>\n          </div>\n\n          <div className=\"wrong\">\n          {this.state.number === 0 ? <h1> </h1> : (this.state.SelectedWord === this.state.answers[answers.length-1].answer) ? <h1>Brilliant!</h1> : <h1>Wrong :(</h1>}\n          </div>\n\n          <div className = \"testTable\">\n            <Test testData = {answers} />\n\n            <br/> <br/>\n           <Answer handleAnswer = {this.handleAnswer} />\n           <br/>\n\n          </div>\n        </div>\n{/* \n        <div className = \"wordTable\">\n\n        </div> */}\n\n        {/* <div className = \"testTable\">\n          <Test testData = {answers} />\n\n          <br/> <br/>\n          <Answer handleAnswer = {this.handleAnswer} />\n          <br/>\n\n        </div> */}\n      </div>\n    )\n  }\n}\n\n// \n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n//\n// class Square extends React.Component {\n//   constructor(props) {\n//     super(props);                         // Child Class의 constructor를 생성할 때 항상 super(props) 호출해야함.\n//     this.state = {\n//       value: null,\n//     };\n//   }\n//\n//   render() {\n//     return (\n//       <button className=\"square\"\n//       onClick={() => this.setState({value: 'X'})}\n//       >\n//         {this.state.value}\n//       </button>\n//     );\n//   }\n// }\n//\n// class Board extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       squares: Array(9).fill(null),\n//     };\n//\n//     handleClick(i) {\n//       const squares = this.state.squares.slice();\n//       squares[i] = 'X';\n//       this.setState({squares: squares});\n//     }\n//\n//\n//   }\n//   renderSquare(i) {\n//     return (\n//       <Square\n//         value={this.state.squares[i]}\n//         onClick={() => {this.handleClick(i)}}\n//        />\n//     );\n//   }\n//\n//   render() {\n//     const status = 'Next player: X';\n//\n//     return (\n//       <div>\n//         <div className=\"status\">{status}</div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n//\n// class Game extends React.Component {\n//   render() {\n//     return (\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//           <Board />\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{/* status */}</div>\n//           <ol>{/*  */}</ol>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n//\n// // ========================================\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}